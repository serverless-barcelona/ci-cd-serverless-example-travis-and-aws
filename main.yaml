AWSTemplateFormatVersion: 2010-09-09
Description: Create and deploy codepipeline for the application.
Parameters:
  App:
    Type: String
    Default: Stack
    Description: Name for the service, used in the code repository, Lambda function, and pipeline names
  Version:
    Type: String
    Default: v1
    Description: Environment version for infrastructure.
  Infrastructure:
    Type: String
    Default: infrastructure
    Description: VCS Tag to deploy the infrastructure environemnt
  SourceIP:
    Type: CommaDelimitedList
    Default: "0.0.0.0./0, 37.135.240.174/32"
    Description: "Comma-delimited list of CIDR blocks"
  VCSBucketCode:
    Type: String
    Default: "app-sourcecodebucket-us-east-1"
    AllowedValues:
      - app-sourcecodebucket-eu-west-1
      - app-sourcecodebucket-eu-west-2
      - app-sourcecodebucket-us-east-1
      - app-sourcecodebucket-us-east-2
    Description: "Source bucket where the code is stored"
  BucketName:
    Type: String
    Default: "build-app"
    Description: "Bucket name for application code"
  DomainName:
    Type: String
    Default: "app.com"
    Description: The DNS name of an existing Amazon Route 53 hosted zone.
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
  FullDomainName:
    Type: String
    Default: "www.app.com"
    Description: The full domain name.
    AllowedPattern: (?!-)[a-zA-Z0-9-.]{1,63}(?<!-)
    ConstraintDescription: must be a valid DNS zone name.
  DBUsername:
    Type: String
    Description: User name for Aurora DB.
  DBPassword:
    Type: String
    Description: Password used for the DB.
  DBName:
    Type: String
    Description: Database name.          

Resources:
  SourceBucketCode:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref VCSBucketCode
      VersioningConfiguration: 
        Status: Enabled
  SourceBucketCodePolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref SourceBucketCode
      PolicyDocument:
        Version: 2012-10-17
        Statement:
        -
         Sid: "Allow access"
         Effect: Allow
         Principal: 
          AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
         Action:
           - "s3:*"
         Resource:
           - !Join [ "", [ "arn:aws:s3:::", !Ref SourceBucketCode, "/*" ] ]
           - !Join [ "", [ "arn:aws:s3:::", !Ref SourceBucketCode ] ]   
  KmsKey:
    Type: AWS::KMS::Key
    Properties: 
      KeyPolicy:
        Version: 2012-10-17
        Id: key-default-1
        Statement:
          - Sid: "Allow administration of the key"
            Effect: Allow
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
            Action:
              - "kms:*"
            Resource: "*"      
  BucketCode:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref BucketName
  BucketCodePolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref BucketCode
      PolicyDocument:
        Version: '2008-10-17'
        Statement:
        -
          Sid: "Allow access to pipeline to upload code"
          Effect: Allow
          Principal:
            AWS: !Sub "arn:aws:iam::${AWS::AccountId}:root"
          Action:
            - "s3:Put*"
            - "s3:Get*"
            - "s3:List*"
          Resource:
            - !Join [ "", [ "arn:aws:s3:::", !Ref BucketCode, "/*" ] ]
            - !Join [ "", [ "arn:aws:s3:::", !Ref BucketCode] ]

  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildAccessCloudformation
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource: "*"
                Action:
                  - 'cloudformation:*'
                  - 'logs:*'
                  - 'lambda:*'
                  - 'iam:*'
                  - 'events:*'
              - Effect: Allow
                Resource:
                  - !Join [ "", [ "arn:aws:s3:::", !Ref BucketCode, "/*" ] ]
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'               
              - Effect: Allow
                Resource:
                  - !Join [ "", [ "arn:aws:s3:::", !Ref BucketCode, "/*" ] ]
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'               
        - PolicyName: CodeBuildAccessKMS
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource:
                  - !Join ["", ["arn:aws:kms:", !Sub "${AWS::Region}", !Sub ":${AWS::AccountId}:key/", !Ref KmsKey]]
                Action:
                  - "kms:Encrypt"
                  - "kms:Decrypt"
                  - "kms:ReEncrypt*"
                  - "kms:GenerateDataKey*"
                  - "kms:DescribeKey"

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${Version}${App}_build'
      Description: Build project for the Lambda service
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/java:openjdk-8
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE

  CFNPipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: CloudFormation Pipeline Execution Policy
      Path: "/"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Action:
            - 'cloudformation:CreateStack'
            - 'cloudformation:DescribeStacks'
            - 'cloudformation:DeleteStack'
            - 'cloudformation:UpdateStack'
            - 'cloudformation:CreateChangeSet'
            - 'cloudformation:ExecuteChangeSet'
            - 'cloudformation:DeleteChangeSet'
            - 'cloudformation:DescribeChangeSet'
            - 'cloudformation:SetStackPolicy'
            - 'cloudformation:SetStackPolicy'
            - 'cloudformation:ValidateTemplate'
            - 'cloudformation:GetTemplate'
            - 'cloudformation:DescribeStackResources'
            - 'cloudformation:DescribeStackResource'
            - 'codebuild:StartBuild'
            - 'codebuild:BatchGetBuilds'
            - 'autoscaling:*'
            - 'elasticloadbalancing:*'
            - 'elasticbeanstalk:*'
            - 'cloudformation:DescribeStackEvents'
          Resource: "*"
  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action:
            - 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service:
            - cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
  PipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
              - codepipeline.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AmazonEC2FullAccess'
        - !Ref CFNPipelinePolicy
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'iam:PassRole'
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                  - 'lambda:InvokeAsyc'
                  - 'cloudformation:DescribeStackEvents'
                  - 'logs:CreateLogGroup'
                Effect: Allow
                Resource: '*'
        - PolicyName: CodePipelineAssumeRole
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'sts:AssumeRole'
                Effect: Allow
                Resource: !Sub 'arn:aws:iam::${AWS::AccountId}:role/*'
        - PolicyName: CodePipelineAccessKMS
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource:
                  - !Join ["", ["arn:aws:kms:", !Sub "${AWS::Region}", !Sub ":${AWS::AccountId}:key/", !Ref KmsKey]]
                Action:
                  - "kms:Encrypt"
                  - "kms:Decrypt"
                  - "kms:ReEncrypt*"
                  - "kms:GenerateDataKey*"
                  - "kms:DescribeKey"                
  LambdaBasicExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
              - lambda.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole'
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaDynamoDBExecutionRole'
        - 'arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess'
        - 'arn:aws:iam::aws:policy/CloudWatchLogsFullAccess'
        - 'arn:aws:iam::aws:policy/AmazonCognitoPowerUser'
      Policies:
        - PolicyName: LambdaToServices
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'lambda:*'
                  - 'cloudformation:ListExports'
                  - 'codepipeline:*'
                  - 'sqs:*'
                  - 'rds:*'
                Effect: Allow
                Resource: '*'         

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref BucketCode
        Type: S3
        EncryptionKey:
          Id: !GetAtt KmsKey.Arn
          Type: "KMS"
      Name: !Sub ${Version}${App}
      RoleArn: !GetAtt PipelineExecutionRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: S3Repo
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: S3
                Version: 1
              Configuration:
                S3Bucket: !Ref SourceBucketCode
                S3ObjectKey: !Join ["", [!Ref Infrastructure, "/cloudformationtemplate.zip"]]
              OutputArtifacts:
                - Name: SourceZip
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceZip
              OutputArtifacts:
                - Name: BuiltZip
        - Name: VPC
          Actions:
            - Name: CreateVPC
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${Version}${App}-VPC
                ChangeSetName: !Sub ${App}-ChangeSet-VPC
                TemplatePath: BuiltZip::network/vpc.yaml
                ParameterOverrides: !Sub '{"Version": "${Version}"}'
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: BuiltZip
              RunOrder: 1
            - Name: ExecuteVPC
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${Version}${App}-VPC
                ChangeSetName: !Sub ${App}-ChangeSet-VPC
              RunOrder: 2
        - Name: WEB
          Actions:
            - Name: CreateWeb
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${Version}${App}-WEB
                ChangeSetName: !Sub ${App}-ChangeSet-WEB
                TemplatePath: BuiltZip::web/web.yaml
                ParameterOverrides: !Sub '{"Version": "${Version}", "FullDomainName": "${FullDomainName}", "DomainName": "${DomainName}"}'
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: BuiltZip
              RunOrder: 1          
            - Name: ExecuteWEB
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${Version}${App}-WEB
                ChangeSetName: !Sub ${App}-ChangeSet-WEB
              RunOrder: 2
        - Name: Aurora
          Actions:
            - Name: CreateAuroraServerless
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${Version}${App}-Aurora-Serverless
                ChangeSetName: !Sub ${App}-ChangeSet-Aurora-Serverless
                TemplatePath: BuiltZip::db/aurora.yaml
                ParameterOverrides: !Sub '{"Version": "${Version}", "DBUsername": "${DBUsername}", "DBPassword": "${DBPassword}", "DBName": "${DBName}"}'
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: BuiltZip
              RunOrder: 1
            - Name: ExecuteAuroraServerless
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${Version}${App}-Aurora-Serverless
                ChangeSetName: !Sub ${App}-ChangeSet-Aurora-Serverless
              RunOrder: 2
        - Name: SQS-SFTP
          Actions:
            - Name: CreateSQS
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${Version}${App}-SQS
                ChangeSetName: !Sub ${App}-ChangeSet-SQS
                TemplatePath: BuiltZip::etl/sqs.yaml
                ParameterOverrides: !Sub '{"Version": "${Version}", "DomainName": "${DomainName}"}'
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: BuiltZip
              RunOrder: 1
            - Name: ExecuteSQS
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${Version}${App}-SQS
                ChangeSetName: !Sub ${App}-ChangeSet-SQS
              RunOrder: 2   
        - Name: Lambdas
          Actions:
            - Name: CreateLambdas
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${Version}${App}-Lambdas
                ChangeSetName: !Sub ${App}-ChangeSet-Lambdas
                TemplatePath: BuiltZip::lambdas/lambdas.yaml
                ParameterOverrides: !Sub '{"Version": "${Version}", "Infrastructure": "${Infrastructure}"}'
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: BuiltZip
              RunOrder: 1
            - Name: ExecuteLambdas
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${Version}${App}-Lambdas
                ChangeSetName: !Sub ${App}-ChangeSet-Lambdas
              RunOrder: 2
        - Name: Cognito-APIGateway
          Actions:
            - Name: CreateCognito-APIGateway
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${Version}${App}-Cognito-APIGateway
                ChangeSetName: !Sub ${App}-ChangeSet-Cognito-APIGateway
                TemplatePath: BuiltZip::auth/cognito.yaml
                ParameterOverrides: !Sub '{"Version": "${Version}"}'
                Capabilities: CAPABILITY_IAM
              InputArtifacts:
                - Name: BuiltZip
              RunOrder: 1
            - Name: ExecuteCognito-APIGateway
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub ${Version}${App}-Cognito-APIGateway
                ChangeSetName: !Sub ${App}-ChangeSet-Cognito-APIGateway
              RunOrder: 2                                                                                                

Outputs:
  SourceIP:
    Description: Export all source IPs
    Value:
      !Select [1, !Ref SourceIP]
    Export:
      Name: !Sub "${Version}-SourceIp"
  BucketCode:
    Description: S3 Bucket Name
    Value: !Ref BucketCode
    Export:
      Name: !Sub "${Version}-BucketCode"
  CodeBuildServiceRole:
    Value: !GetAtt CodeBuildServiceRole.Arn
    Export:
      Name: !Sub "${Version}CodeBuildServiceRole"
  CloudFormationExecutionRole:
    Value: !GetAtt CloudFormationExecutionRole.Arn
    Export:
      Name: !Sub "${Version}CloudFormationExecutionRole"
  PipelineExecutionRole:
    Value: !GetAtt PipelineExecutionRole.Arn
    Export:
      Name: !Sub "${Version}PipelineExecutionRole"
  LambdaBasicExecutionRole:
    Value: !GetAtt LambdaBasicExecutionRole.Arn
    Export:
      Name: !Sub "${Version}LambdaBasicExecutionRole"
  SourceBucketCode:
    Value: !Ref SourceBucketCode
    Export:
      Name: !Sub "${Version}SourceBucketCode"
  KmsKey:
    Value: !Ref KmsKey
    Export:
      Name: !Sub "${Version}KmsKey"
  FullDomain:
    Value: !Ref 'FullDomainName'
    Description: Full DomainName
    Export:
      Name: !Sub "FullDomainName"
  Domain:
    Value: !Ref 'DomainName'
    Description: DomainName
    Export:
      Name: !Sub "DomainName"            
